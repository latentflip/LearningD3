#!/usr/bin/env node

var MAX_HISTORY = parseInt(process.env.NODE_MAX_HISTORY || 1000, 10);
isNaN(MAX_HISTORY) && (MAX_HISTORY = 1000);

// different colors for local, dev, and production
// NOTE: unfortunately these don't work as the REPL prompt.

var color = '\x1b[34m';

var pipeClient = require('../lib/client');
var repl = require('repl');
var path = require('path');
var fs = require('fs');
var historyFilename = path.join(process.cwd(), '.node_history');

// REPL info

console.log('hit CTRL-C twice to exit.');
console.log("\033[32m------                     \n\
you can find the Pusher-pipe module as a global \n\
variable of 'pipeClient'.                       \n\
                                                \n\
Example:                                        \n\
var client = pipeClient.createClient({          \n\
  key: 'cd1731aae21c98a6d2b1',                  \n\
  secret: '671229af735ec34004e7',               \n\
  app_id: 3                                     \n\
});                                             \n\
                                                \n\
client.connect();                               \n\
------\033[39m");


// start the REPL
var repl = repl.start('pipeClient> ');
// create the REPL global context.
repl.context.pipeClient = pipeClient;

try {
  history = JSON.parse(fs.readFileSync(historyFilename, 'utf8'));
  repl.rli.history = history;
} catch (err) {
}

repl.rli.addListener('close', function() {
  fs.writeFileSync(historyFilename, JSON.stringify(
    repl.rli.history.slice(0, MAX_HISTORY)
  ));
});
